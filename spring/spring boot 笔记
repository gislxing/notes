Sping Boot 笔记

1、通过访问start.spring.io可以生成初始springBoot项目

2、springBoot项目启动方式：
    1、运行main函数启动
    2、如果在pom中引入了spring编译插件<artifactId>spring-boot-maven-plugin</artifactId>
       则可以执行运行命令：mvn spring-boot:run
    3、java -jar xx.jar

3、自定义注解
    1、在application.properties文件中添加 user.name=abc
    2、在代码中使用注解@Value("${user.name}")使用该值

4、配置文件application.properties使用随机数
    // 随机字符串
    1、com.port=${random.value}

    // 随机long
    2、com.value=${random.long}

    // 随机int
    3、com.a=${random.int}

    // 10以内随机数
    4、com.b=${random.int(10)}

    // 10-20的随机数
    4、com.c=${random.int[10, 20]}

5、命令行形式启动springBoot时对配置文件application.properties操作
    // 该--server.port=8888是将服务的端口号修改为8888，此命令等价于在application.properties中添加server.port=8888
    1、java -jar xx.jar --server.port=8888

6、开启springBoot操作控制类
    添加配置属性：endpoints.shutdown.enabled=true

7、启动springBoot时指定不同的配置文件
    新建属性文件application-alpha.properties，并配置好
    启动时如果要指定根据该配置文件启动，则启动命令如下：
        java -jar xxx.jar --spring.profiles.active=alpha

8、集成mybatis（Mysql）
    1、引入依赖文件
        <dependency>
			<groupId>org.mybatis.spring.boot</groupId>
			<artifactId>mybatis-spring-boot-starter</artifactId>
			<version>1.3.1</version>
		</dependency>
        <dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<scope>runtime</scope>
		</dependency>
    2、application.yml中添加以下配置
        spring:
            datasource:
                url: jdbc:mysql://localhost:3306/test?useUnicode=true&characterEncoding=utf-8
                username: root
                password: 1qaz2wsx
                driver-class-name: com.mysql.jdbc.Driver
                tomcat:
                    max-active: 20
                    max-idle: 10
                    min-idle: 5
                    initial-size: 10
            application:
                name: simple-provider-user
        server:
            port: 8080
        mybatis:
            type-aliases-package: com.zbs.cloud.entity
            mapper-locations: classpath:mapper/*.xml
    3、启动主类上增加dao扫描配置
        @MapperScan("com.zbs.cloud.dao")

9、定制 /info 端点的显示信息(引入actuator后才有效)
    info:   # 定制/info 端点的显示信息, 以下信息为自定义，其中@java.version@为pom文件中配置的节点
        app:
            name: @project.artifactId@
            encoding: @project.build.sourceEncoding@
            java:
            version: @java.version@
